(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{209:function(t,n,r){"use strict";r.r(n);var i=r(0),e=Object(i.a)({},(function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("ul",[r("li",[t._v("常用命令"),r("br"),t._v("\ngit config --global core.autocrlf false   保持原来的换行"),r("br"),t._v("\ngit checkout -b test  创建并切换新分支"),r("br"),t._v("\ngit checkout test  切换分支"),r("br"),t._v("\ngit push -u origin test 加-u后,可用git push代替git push origin"),r("br"),t._v("\ngit branch --set-upstream-to=origin/test  建立本地到远程的连接"),r("br"),t._v("\ngit add .\ngit commit -m 'xxx'"),r("br"),t._v("\ngit push origin test"),r("br"),t._v("\ngit push origin test1:test2"),r("br"),t._v("\ngit reset --hard a580"),r("br"),t._v("\ngit status"),r("br"),t._v("\ngit log"),r("br"),t._v("\ngit clone -b dev  xxx.git"),r("br"),t._v("\ngit pull --rebase origin xxx"),r("br"),t._v("\ngit branch -a  查看远程分支"),r("br"),t._v("\ngit push origin :test  //删除远程分支"),r("br"),t._v("\ngit branch  查看本地"),r("br"),t._v("\ngit branch -D test  删除本地分支")]),t._v(" "),r("li",[t._v("gitignore配置"),r("br"),t._v("\n'/' 表示目录"),r("br"),t._v("\n'*' 匹配多个字符"),r("br"),t._v("\n'?' 匹配单个字符"),r("br"),t._v("\n'[]' 单个字符的匹配列表"),r("br"),t._v("\n'!' 表示不会略匹配到的文件或目标"),r("br"),t._v("\n由上到下匹配,前面的规则大后面就不匹配"),r("br"),t._v("\n在rebase过程中,有时会有conflict,这是git会停止rebase让用户解决冲突,"),r("br"),t._v("\n解决完后,用git add更新, 继续用git rebase --continue")])])])}),[],!1,null,null,null);n.default=e.exports}}]);