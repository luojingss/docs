(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{212:function(t,s,r){"use strict";r.r(s);var n=r(0),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"数组所有api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组所有api"}},[t._v("#")]),t._v(" 数组所有api")]),t._v(" "),r("p",[t._v("Array.of(8, 5) //[8,5] 参数转化为数组"),r("br"),t._v("\nArray.from  //把类数组对象转化为数组"),r("br"),t._v("\nArray.isArray")]),t._v(" "),r("ul",[r("li",[t._v("Es5之前判断数组的方法")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \na instance Array  \na"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contructor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("Array  \n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype  \n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[Object Array]"')]),t._v("  \n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t__proto__"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用前4中方法判断a是否是数组都是true")]),t._v("\nArray"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),r("ul",[r("li",[t._v("改变数组自身值得9中方法"),r("br"),t._v("\npop, push, reverse, shift, unshift, sort, splice, copywithin, fill")]),t._v(" "),r("li",[t._v("不改变自身值得9种方法"),r("br"),t._v("\nconcat, join, slice, toString, toLocaleString, indexOf, lastIndexOf, includes")]),t._v(" "),r("li",[t._v("遍历方法12个"),r("br"),t._v("\nforEach, every, some, filter, map, reduce, reduceRight从右向左, entries,"),r("br"),t._v("\nfind/findIndex, keys, values, Symbol.iterator")])]),t._v(" "),r("h3",{attrs:{id:"字符串所有api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串所有api"}},[t._v("#")]),t._v(" 字符串所有api")]),t._v(" "),r("h5",{attrs:{id:"string构造器的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string构造器的方法"}},[t._v("#")]),t._v(" String构造器的方法")]),t._v(" "),r("p",[t._v('String.fromCharCode(65,66,67)  //"ABC"'),r("br"),t._v('\n"口".codePointAt()  //119558'),r("br"),t._v('\nString.fromCodePoint(119558)  //"口"'),r("br"),t._v("\nString.raw()  //模板字符串标签函数")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'louis'")]),t._v("\nString"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("raw")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello \\n {name}"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"Hello \\n louis"')]),t._v("\nString"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("raw")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("raw"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"a1b2c3d"')]),t._v("\n")])])]),r("h5",{attrs:{id:"string-prototype"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype"}},[t._v("#")]),t._v(" String.prototype")]),t._v(" "),r("p",[t._v("字符串方法都不会改变原字符串"),r("br"),t._v("\nstr.charAt(index)  //返回指定位置的字符串"),r("br"),t._v("\nstr.charCodeAt(index)  //返回指定位置的字符unicode"),r("br"),t._v('\nstr.concat(str1, str2, ...)  //"A".concat("B", "c") //"ABC"'),r("br"),t._v("\nindexOf, lastIndexOf"),r("br"),t._v("\nstr.localeCompare  //比较字符串, 指定字符串在原字符串前面返回-1,相同 0, 后面 1"),r("br"),t._v("\nstr.match //返回结果数组"),r("br"),t._v("\nstr.search(reg)  //会将字符串参数转化为正则"),r("br"),t._v("\nslice(start, end)"),r("br"),t._v("\nsplit(sep, limit) //limit限定返回的数组长度"),r("br"),t._v("\nsubstr(start, length)"),r("br"),t._v("\nsubstring(index1, index2)  //两个索引之间的字符串"),r("br"),t._v("\ntoLocaleLowerCase"),r("br"),t._v("\ntoLocaleUpperCase"),r("br"),t._v("\ntoLowerCase"),r("br"),t._v("\ntoUpperCase"),r("br"),t._v("\ntoString"),r("br"),t._v("\nvalueOf 返回字符串本身"),r("br"),t._v("\ntrim()  去除首尾空白"),r("br"),t._v("\nincludes  (es6)"),r("br"),t._v("\nincludes(substr, [position])"),r("br"),t._v("\nendswitch  //以什么结尾"),r("br"),t._v("\nnormalize()  按照指定的unicode将字符串规则化"),r("br"),t._v("\nrepeat(n)  返回新字符串, 将原字符串重复n次"),r("br"),t._v("\nstartsWith"),r("br"),t._v("\nHtml有关的方法"),r("br"),t._v("\nanchor 创建一个锚标签"),r("br"),t._v("\nlink: 创建一个a标签")]),t._v(" "),r("h3",{attrs:{id:"对象的所有api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对象的所有api"}},[t._v("#")]),t._v(" 对象的所有API")]),t._v(" "),r("p",[t._v("Object.prototype.constructor===Object  //true"),r("br"),t._v("\nObject.prototype.toString()"),r("br"),t._v("\nObject.prototype.toLocaleString()"),r("br"),t._v("\nvalueOf()  //返回基本类型表示的this值,无法用基本数据类型表示返回this"),r("br"),t._v("\nhasOwnProperty(prop)  //继承而来的返回false"),r("br"),t._v("\nisPrototypeOf(obj)"),r("br"),t._v("\npropertyIsEnumerable(prop)  //属性是否可以被for..in遍历"),r("br"),t._v("\nvalue"),r("br"),t._v("\nwritable"),r("br"),t._v("\nenumerable"),r("br"),t._v("\nconfigurable"),r("br"),t._v("\nset()"),r("br"),t._v("\nget()"),r("br"),t._v("\nObject.defineProperty(obj, prop, desctriptor)"),r("br"),t._v("\nObject.defineProperties(obj, props)"),r("br"),t._v("\nObject.getPrototypeOf(obj)"),r("br"),t._v("\nObject.create(obj, desc)  //创建新对象"),r("br"),t._v("\nObject.getOwnPropertyDescriptor(obj, prop)"),r("br"),t._v("\nobject.getOwnPropertyDescriptors(obj)"),r("br"),t._v("\nObject.getOwnPropertyNames(obj)"),r("br"),t._v("\n//返回所有的key, 不论是否可枚举"),r("br"),t._v("\n//object.keys()返回可枚举的"),r("br"),t._v("\nObject.preventExtensions(obj)  (es5)  //禁止扩展对象"),r("br"),t._v("\nObject.isExtensible(obj)"),r("br"),t._v("\nObject.seal(obj)  //不可配置"),r("br"),t._v("\nObject.isSeal(obj)"),r("br"),t._v("\nObject.freeze(obj)  //永远不能修改"),r("br"),t._v("\nObject.isFrozon(obj)"),r("br"),t._v("\nObject.keys(obj)  //返回可枚举的")]),t._v(" "),r("ul",[r("li",[t._v("es6中的object"),r("br"),t._v("\nObject.is(value1, value2)"),r("br"),t._v("\n//相当于===, +0不等于-0, NaN等于NaN"),r("br"),t._v("\nObject.assign(target, ...sources)"),r("br"),t._v("\nObject.getOwnPropertySymbols(obj)"),r("br"),t._v("\nObject.setPrototypeOf(obj, prototype)")])])])}),[],!1,null,null,null);s.default=a.exports}}]);